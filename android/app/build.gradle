// Move the plugins block to the top
plugins {
    id 'com.android.application'
    id 'kotlin-android' // (Kotlin 사용하는 경우)
    // Add the Google Services plugin here if it's not applied conditionally
    // id 'com.google.gms.google-services'
}

android {
    namespace "com.mclusky.dagub"

    // ✅ 버전 직접 명시
    compileSdkVersion 34
    compileSdkVersion 35
    defaultConfig {
        applicationId "com.mclusky.dagub"
        minSdkVersion 23
        targetSdkVersion 34
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    flatDir {
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.2.0"
    implementation "androidx.core:core-splashscreen:1.0.1"

    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // ✅ Firebase 연동
    implementation platform('com.google.firebase:firebase-bom:33.16.0')
    implementation 'com.google.firebase:firebase-messaging'
    // implementation 'com.google.firebase:firebase-analytics'  // 필요 시 주석 해제
}

apply from: 'capacitor.build.gradle'

// ✅ Firebase Push용 플러그인 적용 (존재할 때만)
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists()) {
        // If you are using the plugins {} block, it's generally recommended
        // to declare plugins there. However, conditional application like this
        // is a bit different. If you still want to apply it conditionally,
        // this legacy way might be necessary.
        // If 'com.google.gms.google-services' is always needed,
        // add it to the plugins {} block at the top and remove this try-catch.
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
